schemas:
  bind: &bind
    - lib
    - test
    - index.js
    - server.js
  coverage: &disable-coverage
    enabled: false
  envs:
    local-service: &local-service-env
      service_port: 3000
      service_host_name: localhost
      domapic_path: .test
    docker-service: &docker-service-env
      service_port: 3000
      service_host_name: module-container
      domapic_path: .shared
  clean: &clean
    local:
      command: test/functional/commands/clean.sh
    docker:
      container: service-container
      command: test/functional/commands/clean.sh
      down-volumes: true
  services:
    local: &local-service
      command: test/functional/commands/start-module.sh
      env: *local-service-env
    docker: &docker-service
      container: module-container
      command: test/functional/commands/start-module.sh
      env: *docker-service-env
  test: &functional-test
    local:
      wait-on: tcp:localhost:3000
      env: *local-service-env
    docker:
      container: test-container
      wait-on: tcp:module-container:3000
      env: *docker-service-env
docker-images:
  - name: node-image
    from: node:8.11.1
    expose:
      - 3000
    add:
      - package.json
      - npm-shrinkwrap.json
    install: test/functional/commands/install.sh
docker-containers:
  - name: module-container
    build: node-image
    bind: *bind
  - name: test-container
    build: node-image
    bind: *bind
suites:
  unit:
    - name: unit 
      test:
        specs: test/unit
      coverage:
        config:
          dir: .coverage
  functional:
    - name: api
      describe: should set relay status and save data in storage for next restart
      before: *clean
      services:
        - name: module
          abort-on-error: true
          local: *local-service
          docker: *docker-service
      test:
        <<: *functional-test
        specs:
          - test/functional/specs/api.specs.js
      coverage: *disable-coverage
    - name: config
      describe: should init the relay with provided configuration
      before: *clean
      services:
        - name: module
          abort-on-error: true
          local:
            <<: *local-service
            env:  
              <<: *local-service-env
              service_extra_options: --initialStatus=true --gpio=54 --invert=true
          docker:
            <<: *docker-service
            env:
              <<: *docker-service-env
              service_extra_options: --initialStatus=true --gpio=54 --invert=true
      test:
        <<: *functional-test
        specs:
          - test/functional/specs/config.specs.js
          - test/functional/specs/api.specs.js
      coverage: *disable-coverage
